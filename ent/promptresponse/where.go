// Code generated by ent, DO NOT EDIT.

package promptresponse

import (
	"skillsdemo/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldLTE(FieldID, id))
}

// ParsedTemplate applies equality check predicate on the "parsed_template" field. It's identical to ParsedTemplateEQ.
func ParsedTemplate(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEQ(FieldParsedTemplate, v))
}

// PromptIndex applies equality check predicate on the "prompt_index" field. It's identical to PromptIndexEQ.
func PromptIndex(v int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEQ(FieldPromptIndex, v))
}

// RangeValue applies equality check predicate on the "range_value" field. It's identical to RangeValueEQ.
func RangeValue(v int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEQ(FieldRangeValue, v))
}

// BoolValue applies equality check predicate on the "bool_value" field. It's identical to BoolValueEQ.
func BoolValue(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEQ(FieldBoolValue, v))
}

// FreeformValue applies equality check predicate on the "freeform_value" field. It's identical to FreeformValueEQ.
func FreeformValue(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEQ(FieldFreeformValue, v))
}

// AnsweredTime applies equality check predicate on the "answered_time" field. It's identical to AnsweredTimeEQ.
func AnsweredTime(v time.Time) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEQ(FieldAnsweredTime, v))
}

// ParsedTemplateEQ applies the EQ predicate on the "parsed_template" field.
func ParsedTemplateEQ(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEQ(FieldParsedTemplate, v))
}

// ParsedTemplateNEQ applies the NEQ predicate on the "parsed_template" field.
func ParsedTemplateNEQ(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNEQ(FieldParsedTemplate, v))
}

// ParsedTemplateIn applies the In predicate on the "parsed_template" field.
func ParsedTemplateIn(vs ...string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldIn(FieldParsedTemplate, vs...))
}

// ParsedTemplateNotIn applies the NotIn predicate on the "parsed_template" field.
func ParsedTemplateNotIn(vs ...string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNotIn(FieldParsedTemplate, vs...))
}

// ParsedTemplateGT applies the GT predicate on the "parsed_template" field.
func ParsedTemplateGT(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldGT(FieldParsedTemplate, v))
}

// ParsedTemplateGTE applies the GTE predicate on the "parsed_template" field.
func ParsedTemplateGTE(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldGTE(FieldParsedTemplate, v))
}

// ParsedTemplateLT applies the LT predicate on the "parsed_template" field.
func ParsedTemplateLT(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldLT(FieldParsedTemplate, v))
}

// ParsedTemplateLTE applies the LTE predicate on the "parsed_template" field.
func ParsedTemplateLTE(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldLTE(FieldParsedTemplate, v))
}

// ParsedTemplateContains applies the Contains predicate on the "parsed_template" field.
func ParsedTemplateContains(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldContains(FieldParsedTemplate, v))
}

// ParsedTemplateHasPrefix applies the HasPrefix predicate on the "parsed_template" field.
func ParsedTemplateHasPrefix(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldHasPrefix(FieldParsedTemplate, v))
}

// ParsedTemplateHasSuffix applies the HasSuffix predicate on the "parsed_template" field.
func ParsedTemplateHasSuffix(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldHasSuffix(FieldParsedTemplate, v))
}

// ParsedTemplateEqualFold applies the EqualFold predicate on the "parsed_template" field.
func ParsedTemplateEqualFold(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEqualFold(FieldParsedTemplate, v))
}

// ParsedTemplateContainsFold applies the ContainsFold predicate on the "parsed_template" field.
func ParsedTemplateContainsFold(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldContainsFold(FieldParsedTemplate, v))
}

// PromptIndexEQ applies the EQ predicate on the "prompt_index" field.
func PromptIndexEQ(v int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEQ(FieldPromptIndex, v))
}

// PromptIndexNEQ applies the NEQ predicate on the "prompt_index" field.
func PromptIndexNEQ(v int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNEQ(FieldPromptIndex, v))
}

// PromptIndexIn applies the In predicate on the "prompt_index" field.
func PromptIndexIn(vs ...int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldIn(FieldPromptIndex, vs...))
}

// PromptIndexNotIn applies the NotIn predicate on the "prompt_index" field.
func PromptIndexNotIn(vs ...int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNotIn(FieldPromptIndex, vs...))
}

// PromptIndexGT applies the GT predicate on the "prompt_index" field.
func PromptIndexGT(v int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldGT(FieldPromptIndex, v))
}

// PromptIndexGTE applies the GTE predicate on the "prompt_index" field.
func PromptIndexGTE(v int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldGTE(FieldPromptIndex, v))
}

// PromptIndexLT applies the LT predicate on the "prompt_index" field.
func PromptIndexLT(v int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldLT(FieldPromptIndex, v))
}

// PromptIndexLTE applies the LTE predicate on the "prompt_index" field.
func PromptIndexLTE(v int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldLTE(FieldPromptIndex, v))
}

// RangeValueEQ applies the EQ predicate on the "range_value" field.
func RangeValueEQ(v int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEQ(FieldRangeValue, v))
}

// RangeValueNEQ applies the NEQ predicate on the "range_value" field.
func RangeValueNEQ(v int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNEQ(FieldRangeValue, v))
}

// RangeValueIn applies the In predicate on the "range_value" field.
func RangeValueIn(vs ...int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldIn(FieldRangeValue, vs...))
}

// RangeValueNotIn applies the NotIn predicate on the "range_value" field.
func RangeValueNotIn(vs ...int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNotIn(FieldRangeValue, vs...))
}

// RangeValueGT applies the GT predicate on the "range_value" field.
func RangeValueGT(v int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldGT(FieldRangeValue, v))
}

// RangeValueGTE applies the GTE predicate on the "range_value" field.
func RangeValueGTE(v int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldGTE(FieldRangeValue, v))
}

// RangeValueLT applies the LT predicate on the "range_value" field.
func RangeValueLT(v int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldLT(FieldRangeValue, v))
}

// RangeValueLTE applies the LTE predicate on the "range_value" field.
func RangeValueLTE(v int) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldLTE(FieldRangeValue, v))
}

// RangeValueIsNil applies the IsNil predicate on the "range_value" field.
func RangeValueIsNil() predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldIsNull(FieldRangeValue))
}

// RangeValueNotNil applies the NotNil predicate on the "range_value" field.
func RangeValueNotNil() predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNotNull(FieldRangeValue))
}

// BoolValueEQ applies the EQ predicate on the "bool_value" field.
func BoolValueEQ(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEQ(FieldBoolValue, v))
}

// BoolValueNEQ applies the NEQ predicate on the "bool_value" field.
func BoolValueNEQ(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNEQ(FieldBoolValue, v))
}

// BoolValueIn applies the In predicate on the "bool_value" field.
func BoolValueIn(vs ...string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldIn(FieldBoolValue, vs...))
}

// BoolValueNotIn applies the NotIn predicate on the "bool_value" field.
func BoolValueNotIn(vs ...string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNotIn(FieldBoolValue, vs...))
}

// BoolValueGT applies the GT predicate on the "bool_value" field.
func BoolValueGT(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldGT(FieldBoolValue, v))
}

// BoolValueGTE applies the GTE predicate on the "bool_value" field.
func BoolValueGTE(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldGTE(FieldBoolValue, v))
}

// BoolValueLT applies the LT predicate on the "bool_value" field.
func BoolValueLT(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldLT(FieldBoolValue, v))
}

// BoolValueLTE applies the LTE predicate on the "bool_value" field.
func BoolValueLTE(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldLTE(FieldBoolValue, v))
}

// BoolValueContains applies the Contains predicate on the "bool_value" field.
func BoolValueContains(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldContains(FieldBoolValue, v))
}

// BoolValueHasPrefix applies the HasPrefix predicate on the "bool_value" field.
func BoolValueHasPrefix(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldHasPrefix(FieldBoolValue, v))
}

// BoolValueHasSuffix applies the HasSuffix predicate on the "bool_value" field.
func BoolValueHasSuffix(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldHasSuffix(FieldBoolValue, v))
}

// BoolValueIsNil applies the IsNil predicate on the "bool_value" field.
func BoolValueIsNil() predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldIsNull(FieldBoolValue))
}

// BoolValueNotNil applies the NotNil predicate on the "bool_value" field.
func BoolValueNotNil() predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNotNull(FieldBoolValue))
}

// BoolValueEqualFold applies the EqualFold predicate on the "bool_value" field.
func BoolValueEqualFold(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEqualFold(FieldBoolValue, v))
}

// BoolValueContainsFold applies the ContainsFold predicate on the "bool_value" field.
func BoolValueContainsFold(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldContainsFold(FieldBoolValue, v))
}

// EnumValueIsNil applies the IsNil predicate on the "enum_value" field.
func EnumValueIsNil() predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldIsNull(FieldEnumValue))
}

// EnumValueNotNil applies the NotNil predicate on the "enum_value" field.
func EnumValueNotNil() predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNotNull(FieldEnumValue))
}

// LabelValuesIsNil applies the IsNil predicate on the "label_values" field.
func LabelValuesIsNil() predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldIsNull(FieldLabelValues))
}

// LabelValuesNotNil applies the NotNil predicate on the "label_values" field.
func LabelValuesNotNil() predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNotNull(FieldLabelValues))
}

// FreeformValueEQ applies the EQ predicate on the "freeform_value" field.
func FreeformValueEQ(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEQ(FieldFreeformValue, v))
}

// FreeformValueNEQ applies the NEQ predicate on the "freeform_value" field.
func FreeformValueNEQ(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNEQ(FieldFreeformValue, v))
}

// FreeformValueIn applies the In predicate on the "freeform_value" field.
func FreeformValueIn(vs ...string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldIn(FieldFreeformValue, vs...))
}

// FreeformValueNotIn applies the NotIn predicate on the "freeform_value" field.
func FreeformValueNotIn(vs ...string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNotIn(FieldFreeformValue, vs...))
}

// FreeformValueGT applies the GT predicate on the "freeform_value" field.
func FreeformValueGT(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldGT(FieldFreeformValue, v))
}

// FreeformValueGTE applies the GTE predicate on the "freeform_value" field.
func FreeformValueGTE(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldGTE(FieldFreeformValue, v))
}

// FreeformValueLT applies the LT predicate on the "freeform_value" field.
func FreeformValueLT(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldLT(FieldFreeformValue, v))
}

// FreeformValueLTE applies the LTE predicate on the "freeform_value" field.
func FreeformValueLTE(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldLTE(FieldFreeformValue, v))
}

// FreeformValueContains applies the Contains predicate on the "freeform_value" field.
func FreeformValueContains(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldContains(FieldFreeformValue, v))
}

// FreeformValueHasPrefix applies the HasPrefix predicate on the "freeform_value" field.
func FreeformValueHasPrefix(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldHasPrefix(FieldFreeformValue, v))
}

// FreeformValueHasSuffix applies the HasSuffix predicate on the "freeform_value" field.
func FreeformValueHasSuffix(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldHasSuffix(FieldFreeformValue, v))
}

// FreeformValueIsNil applies the IsNil predicate on the "freeform_value" field.
func FreeformValueIsNil() predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldIsNull(FieldFreeformValue))
}

// FreeformValueNotNil applies the NotNil predicate on the "freeform_value" field.
func FreeformValueNotNil() predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNotNull(FieldFreeformValue))
}

// FreeformValueEqualFold applies the EqualFold predicate on the "freeform_value" field.
func FreeformValueEqualFold(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEqualFold(FieldFreeformValue, v))
}

// FreeformValueContainsFold applies the ContainsFold predicate on the "freeform_value" field.
func FreeformValueContainsFold(v string) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldContainsFold(FieldFreeformValue, v))
}

// AnsweredTimeEQ applies the EQ predicate on the "answered_time" field.
func AnsweredTimeEQ(v time.Time) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldEQ(FieldAnsweredTime, v))
}

// AnsweredTimeNEQ applies the NEQ predicate on the "answered_time" field.
func AnsweredTimeNEQ(v time.Time) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNEQ(FieldAnsweredTime, v))
}

// AnsweredTimeIn applies the In predicate on the "answered_time" field.
func AnsweredTimeIn(vs ...time.Time) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldIn(FieldAnsweredTime, vs...))
}

// AnsweredTimeNotIn applies the NotIn predicate on the "answered_time" field.
func AnsweredTimeNotIn(vs ...time.Time) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNotIn(FieldAnsweredTime, vs...))
}

// AnsweredTimeGT applies the GT predicate on the "answered_time" field.
func AnsweredTimeGT(v time.Time) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldGT(FieldAnsweredTime, v))
}

// AnsweredTimeGTE applies the GTE predicate on the "answered_time" field.
func AnsweredTimeGTE(v time.Time) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldGTE(FieldAnsweredTime, v))
}

// AnsweredTimeLT applies the LT predicate on the "answered_time" field.
func AnsweredTimeLT(v time.Time) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldLT(FieldAnsweredTime, v))
}

// AnsweredTimeLTE applies the LTE predicate on the "answered_time" field.
func AnsweredTimeLTE(v time.Time) predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldLTE(FieldAnsweredTime, v))
}

// AnsweredTimeIsNil applies the IsNil predicate on the "answered_time" field.
func AnsweredTimeIsNil() predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldIsNull(FieldAnsweredTime))
}

// AnsweredTimeNotNil applies the NotNil predicate on the "answered_time" field.
func AnsweredTimeNotNil() predicate.PromptResponse {
	return predicate.PromptResponse(sql.FieldNotNull(FieldAnsweredTime))
}

// HasFeedback applies the HasEdge predicate on the "feedback" edge.
func HasFeedback() predicate.PromptResponse {
	return predicate.PromptResponse(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, FeedbackTable, FeedbackColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasFeedbackWith applies the HasEdge predicate on the "feedback" edge with a given conditions (other predicates).
func HasFeedbackWith(preds ...predicate.Feedback) predicate.PromptResponse {
	return predicate.PromptResponse(func(s *sql.Selector) {
		step := newFeedbackStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PromptResponse) predicate.PromptResponse {
	return predicate.PromptResponse(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PromptResponse) predicate.PromptResponse {
	return predicate.PromptResponse(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PromptResponse) predicate.PromptResponse {
	return predicate.PromptResponse(sql.NotPredicates(p))
}
