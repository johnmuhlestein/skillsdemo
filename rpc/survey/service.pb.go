// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: rpc/survey/service.proto

package survey

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SurveyStatus int32

const (
	SurveyStatus_unpublished SurveyStatus = 0
	SurveyStatus_active      SurveyStatus = 1
	SurveyStatus_archived    SurveyStatus = 2
)

// Enum value maps for SurveyStatus.
var (
	SurveyStatus_name = map[int32]string{
		0: "unpublished",
		1: "active",
		2: "archived",
	}
	SurveyStatus_value = map[string]int32{
		"unpublished": 0,
		"active":      1,
		"archived":    2,
	}
)

func (x SurveyStatus) Enum() *SurveyStatus {
	p := new(SurveyStatus)
	*p = x
	return p
}

func (x SurveyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SurveyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_survey_service_proto_enumTypes[0].Descriptor()
}

func (SurveyStatus) Type() protoreflect.EnumType {
	return &file_rpc_survey_service_proto_enumTypes[0]
}

func (x SurveyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SurveyStatus.Descriptor instead.
func (SurveyStatus) EnumDescriptor() ([]byte, []int) {
	return file_rpc_survey_service_proto_rawDescGZIP(), []int{0}
}

type MeasureType int32

const (
	MeasureType_freeform    MeasureType = 0
	MeasureType_range       MeasureType = 1
	MeasureType_boolean     MeasureType = 2
	MeasureType_enumeration MeasureType = 3
	MeasureType_multiflag   MeasureType = 4
)

// Enum value maps for MeasureType.
var (
	MeasureType_name = map[int32]string{
		0: "freeform",
		1: "range",
		2: "boolean",
		3: "enumeration",
		4: "multiflag",
	}
	MeasureType_value = map[string]int32{
		"freeform":    0,
		"range":       1,
		"boolean":     2,
		"enumeration": 3,
		"multiflag":   4,
	}
)

func (x MeasureType) Enum() *MeasureType {
	p := new(MeasureType)
	*p = x
	return p
}

func (x MeasureType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MeasureType) Descriptor() protoreflect.EnumDescriptor {
	return file_rpc_survey_service_proto_enumTypes[1].Descriptor()
}

func (MeasureType) Type() protoreflect.EnumType {
	return &file_rpc_survey_service_proto_enumTypes[1]
}

func (x MeasureType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MeasureType.Descriptor instead.
func (MeasureType) EnumDescriptor() ([]byte, []int) {
	return file_rpc_survey_service_proto_rawDescGZIP(), []int{1}
}

type MeasureRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LowRange  int32 `protobuf:"varint,1,opt,name=low_range,json=lowRange,proto3" json:"low_range,omitempty"`
	HighRange int32 `protobuf:"varint,2,opt,name=high_range,json=highRange,proto3" json:"high_range,omitempty"`
}

func (x *MeasureRange) Reset() {
	*x = MeasureRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_survey_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureRange) ProtoMessage() {}

func (x *MeasureRange) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_survey_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureRange.ProtoReflect.Descriptor instead.
func (*MeasureRange) Descriptor() ([]byte, []int) {
	return file_rpc_survey_service_proto_rawDescGZIP(), []int{0}
}

func (x *MeasureRange) GetLowRange() int32 {
	if x != nil {
		return x.LowRange
	}
	return 0
}

func (x *MeasureRange) GetHighRange() int32 {
	if x != nil {
		return x.HighRange
	}
	return 0
}

type MeasureBoolean struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BoolTrue  string `protobuf:"bytes,1,opt,name=bool_true,json=boolTrue,proto3" json:"bool_true,omitempty"`
	BoolFalse string `protobuf:"bytes,2,opt,name=bool_false,json=boolFalse,proto3" json:"bool_false,omitempty"`
}

func (x *MeasureBoolean) Reset() {
	*x = MeasureBoolean{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_survey_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureBoolean) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureBoolean) ProtoMessage() {}

func (x *MeasureBoolean) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_survey_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureBoolean.ProtoReflect.Descriptor instead.
func (*MeasureBoolean) Descriptor() ([]byte, []int) {
	return file_rpc_survey_service_proto_rawDescGZIP(), []int{1}
}

func (x *MeasureBoolean) GetBoolTrue() string {
	if x != nil {
		return x.BoolTrue
	}
	return ""
}

func (x *MeasureBoolean) GetBoolFalse() string {
	if x != nil {
		return x.BoolFalse
	}
	return ""
}

type MeasureEnum struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32  `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *MeasureEnum) Reset() {
	*x = MeasureEnum{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_survey_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureEnum) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureEnum) ProtoMessage() {}

func (x *MeasureEnum) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_survey_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureEnum.ProtoReflect.Descriptor instead.
func (*MeasureEnum) Descriptor() ([]byte, []int) {
	return file_rpc_survey_service_proto_rawDescGZIP(), []int{2}
}

func (x *MeasureEnum) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *MeasureEnum) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type MeasureFlags struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
}

func (x *MeasureFlags) Reset() {
	*x = MeasureFlags{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_survey_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MeasureFlags) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeasureFlags) ProtoMessage() {}

func (x *MeasureFlags) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_survey_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeasureFlags.ProtoReflect.Descriptor instead.
func (*MeasureFlags) Descriptor() ([]byte, []int) {
	return file_rpc_survey_service_proto_rawDescGZIP(), []int{3}
}

func (x *MeasureFlags) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

type SurveyResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title       string       `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description *string      `protobuf:"bytes,4,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Status      SurveyStatus `protobuf:"varint,5,opt,name=status,proto3,enum=skillsdemo.SurveyStatus" json:"status,omitempty"`
	Prompts     []*Prompt    `protobuf:"bytes,6,rep,name=prompts,proto3" json:"prompts,omitempty"`
}

func (x *SurveyResp) Reset() {
	*x = SurveyResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_survey_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveyResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveyResp) ProtoMessage() {}

func (x *SurveyResp) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_survey_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveyResp.ProtoReflect.Descriptor instead.
func (*SurveyResp) Descriptor() ([]byte, []int) {
	return file_rpc_survey_service_proto_rawDescGZIP(), []int{4}
}

func (x *SurveyResp) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SurveyResp) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SurveyResp) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *SurveyResp) GetStatus() SurveyStatus {
	if x != nil {
		return x.Status
	}
	return SurveyStatus_unpublished
}

func (x *SurveyResp) GetPrompts() []*Prompt {
	if x != nil {
		return x.Prompts
	}
	return nil
}

type CreateSurveyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string          `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Description *string         `protobuf:"bytes,2,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Status      SurveyStatus    `protobuf:"varint,3,opt,name=status,proto3,enum=skillsdemo.SurveyStatus" json:"status,omitempty"`
	Prompts     []*CreatePrompt `protobuf:"bytes,4,rep,name=prompts,proto3" json:"prompts,omitempty"`
}

func (x *CreateSurveyReq) Reset() {
	*x = CreateSurveyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_survey_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSurveyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSurveyReq) ProtoMessage() {}

func (x *CreateSurveyReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_survey_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSurveyReq.ProtoReflect.Descriptor instead.
func (*CreateSurveyReq) Descriptor() ([]byte, []int) {
	return file_rpc_survey_service_proto_rawDescGZIP(), []int{5}
}

func (x *CreateSurveyReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateSurveyReq) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *CreateSurveyReq) GetStatus() SurveyStatus {
	if x != nil {
		return x.Status
	}
	return SurveyStatus_unpublished
}

func (x *CreateSurveyReq) GetPrompts() []*CreatePrompt {
	if x != nil {
		return x.Prompts
	}
	return nil
}

type PendingFeedbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppointmentId string       `protobuf:"bytes,1,opt,name=appointment_id,json=appointmentId,proto3" json:"appointment_id,omitempty"`
	Title         string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   *string      `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Status        SurveyStatus `protobuf:"varint,4,opt,name=status,proto3,enum=skillsdemo.SurveyStatus" json:"status,omitempty"`
	Prompts       []*Prompt    `protobuf:"bytes,5,rep,name=prompts,proto3" json:"prompts,omitempty"`
}

func (x *PendingFeedbackReq) Reset() {
	*x = PendingFeedbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_survey_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PendingFeedbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PendingFeedbackReq) ProtoMessage() {}

func (x *PendingFeedbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_survey_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PendingFeedbackReq.ProtoReflect.Descriptor instead.
func (*PendingFeedbackReq) Descriptor() ([]byte, []int) {
	return file_rpc_survey_service_proto_rawDescGZIP(), []int{6}
}

func (x *PendingFeedbackReq) GetAppointmentId() string {
	if x != nil {
		return x.AppointmentId
	}
	return ""
}

func (x *PendingFeedbackReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PendingFeedbackReq) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *PendingFeedbackReq) GetStatus() SurveyStatus {
	if x != nil {
		return x.Status
	}
	return SurveyStatus_unpublished
}

func (x *PendingFeedbackReq) GetPrompts() []*Prompt {
	if x != nil {
		return x.Prompts
	}
	return nil
}

type SurveyStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status SurveyStatus `protobuf:"varint,2,opt,name=status,proto3,enum=skillsdemo.SurveyStatus" json:"status,omitempty"`
}

func (x *SurveyStatusReq) Reset() {
	*x = SurveyStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_survey_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SurveyStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SurveyStatusReq) ProtoMessage() {}

func (x *SurveyStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_survey_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SurveyStatusReq.ProtoReflect.Descriptor instead.
func (*SurveyStatusReq) Descriptor() ([]byte, []int) {
	return file_rpc_survey_service_proto_rawDescGZIP(), []int{7}
}

func (x *SurveyStatusReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SurveyStatusReq) GetStatus() SurveyStatus {
	if x != nil {
		return x.Status
	}
	return SurveyStatus_unpublished
}

type CreatePrompt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index                   int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Title                   string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description             string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	ResponseType            *Measure `protobuf:"bytes,4,opt,name=response_type,json=responseType,proto3" json:"response_type,omitempty"`
	AllowAdditionalFeedback bool     `protobuf:"varint,5,opt,name=allow_additional_feedback,json=allowAdditionalFeedback,proto3" json:"allow_additional_feedback,omitempty"`
}

func (x *CreatePrompt) Reset() {
	*x = CreatePrompt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_survey_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePrompt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrompt) ProtoMessage() {}

func (x *CreatePrompt) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_survey_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrompt.ProtoReflect.Descriptor instead.
func (*CreatePrompt) Descriptor() ([]byte, []int) {
	return file_rpc_survey_service_proto_rawDescGZIP(), []int{8}
}

func (x *CreatePrompt) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *CreatePrompt) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreatePrompt) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePrompt) GetResponseType() *Measure {
	if x != nil {
		return x.ResponseType
	}
	return nil
}

func (x *CreatePrompt) GetAllowAdditionalFeedback() bool {
	if x != nil {
		return x.AllowAdditionalFeedback
	}
	return false
}

type Prompt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                      string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Index                   int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Title                   string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description             string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ResponseType            *Measure `protobuf:"bytes,5,opt,name=response_type,json=responseType,proto3" json:"response_type,omitempty"`
	AllowAdditionalFeedback bool     `protobuf:"varint,6,opt,name=allow_additional_feedback,json=allowAdditionalFeedback,proto3" json:"allow_additional_feedback,omitempty"`
}

func (x *Prompt) Reset() {
	*x = Prompt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_survey_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Prompt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prompt) ProtoMessage() {}

func (x *Prompt) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_survey_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prompt.ProtoReflect.Descriptor instead.
func (*Prompt) Descriptor() ([]byte, []int) {
	return file_rpc_survey_service_proto_rawDescGZIP(), []int{9}
}

func (x *Prompt) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Prompt) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Prompt) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Prompt) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Prompt) GetResponseType() *Measure {
	if x != nil {
		return x.ResponseType
	}
	return nil
}

func (x *Prompt) GetAllowAdditionalFeedback() bool {
	if x != nil {
		return x.AllowAdditionalFeedback
	}
	return false
}

type Measure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        MeasureType     `protobuf:"varint,1,opt,name=type,proto3,enum=skillsdemo.MeasureType" json:"type,omitempty"`
	Range       *MeasureRange   `protobuf:"bytes,10,opt,name=range,proto3" json:"range,omitempty"`
	Boolean     *MeasureBoolean `protobuf:"bytes,11,opt,name=boolean,proto3" json:"boolean,omitempty"`
	Enumeration []*MeasureEnum  `protobuf:"bytes,12,rep,name=enumeration,proto3" json:"enumeration,omitempty"`
	Flags       []*MeasureFlags `protobuf:"bytes,13,rep,name=flags,proto3" json:"flags,omitempty"`
}

func (x *Measure) Reset() {
	*x = Measure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rpc_survey_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Measure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Measure) ProtoMessage() {}

func (x *Measure) ProtoReflect() protoreflect.Message {
	mi := &file_rpc_survey_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Measure.ProtoReflect.Descriptor instead.
func (*Measure) Descriptor() ([]byte, []int) {
	return file_rpc_survey_service_proto_rawDescGZIP(), []int{10}
}

func (x *Measure) GetType() MeasureType {
	if x != nil {
		return x.Type
	}
	return MeasureType_freeform
}

func (x *Measure) GetRange() *MeasureRange {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *Measure) GetBoolean() *MeasureBoolean {
	if x != nil {
		return x.Boolean
	}
	return nil
}

func (x *Measure) GetEnumeration() []*MeasureEnum {
	if x != nil {
		return x.Enumeration
	}
	return nil
}

func (x *Measure) GetFlags() []*MeasureFlags {
	if x != nil {
		return x.Flags
	}
	return nil
}

var File_rpc_survey_service_proto protoreflect.FileDescriptor

var file_rpc_survey_service_proto_rawDesc = []byte{
	0x0a, 0x18, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x22, 0x4a, 0x0a, 0x0c, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x77, 0x5f, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6c, 0x6f, 0x77, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x69, 0x67, 0x68, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x22, 0x4c, 0x0a, 0x0e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x42, 0x6f, 0x6f,
	0x6c, 0x65, 0x61, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x72, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x6f, 0x6f, 0x6c, 0x54, 0x72, 0x75,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x46, 0x61, 0x6c, 0x73, 0x65,
	0x22, 0x39, 0x0a, 0x0b, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x24, 0x0a, 0x0c, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x22, 0xc9, 0x01, 0x0a, 0x0a, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x50, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc4, 0x01,
	0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x30,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x53, 0x75, 0x72, 0x76,
	0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x32, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xe8, 0x01, 0x0a, 0x12, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x61,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12,
	0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x18, 0x2e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x53, 0x75, 0x72,
	0x76, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2c, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x53, 0x0a, 0x0f, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x18, 0x2e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0xd2, 0x01, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52,
	0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a,
	0x19, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x17, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x22, 0xdc, 0x01, 0x0a, 0x06, 0x50, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x0c,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x19,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x17, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x22, 0x87, 0x02, 0x0a, 0x07, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x2e, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x12, 0x34, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x42, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x52, 0x07,
	0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x12, 0x39, 0x0a, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x4d,
	0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x52, 0x05, 0x66, 0x6c, 0x61,
	0x67, 0x73, 0x2a, 0x39, 0x0a, 0x0c, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x0f, 0x0a, 0x0b, 0x75, 0x6e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x10, 0x02, 0x2a, 0x53, 0x0a,
	0x0b, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08,
	0x66, 0x72, 0x65, 0x65, 0x66, 0x6f, 0x72, 0x6d, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
	0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x66, 0x6c, 0x61, 0x67,
	0x10, 0x04, 0x32, 0x4d, 0x0a, 0x06, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x12, 0x43, 0x0a, 0x0c,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x12, 0x1b, 0x2e, 0x73,
	0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x73, 0x64, 0x65, 0x6d, 0x6f, 0x2e, 0x53, 0x75, 0x72, 0x76, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x42, 0x0c, 0x5a, 0x0a, 0x72, 0x70, 0x63, 0x2f, 0x73, 0x75, 0x72, 0x76, 0x65, 0x79, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rpc_survey_service_proto_rawDescOnce sync.Once
	file_rpc_survey_service_proto_rawDescData = file_rpc_survey_service_proto_rawDesc
)

func file_rpc_survey_service_proto_rawDescGZIP() []byte {
	file_rpc_survey_service_proto_rawDescOnce.Do(func() {
		file_rpc_survey_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_rpc_survey_service_proto_rawDescData)
	})
	return file_rpc_survey_service_proto_rawDescData
}

var file_rpc_survey_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_rpc_survey_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_rpc_survey_service_proto_goTypes = []interface{}{
	(SurveyStatus)(0),          // 0: skillsdemo.SurveyStatus
	(MeasureType)(0),           // 1: skillsdemo.MeasureType
	(*MeasureRange)(nil),       // 2: skillsdemo.MeasureRange
	(*MeasureBoolean)(nil),     // 3: skillsdemo.MeasureBoolean
	(*MeasureEnum)(nil),        // 4: skillsdemo.MeasureEnum
	(*MeasureFlags)(nil),       // 5: skillsdemo.MeasureFlags
	(*SurveyResp)(nil),         // 6: skillsdemo.SurveyResp
	(*CreateSurveyReq)(nil),    // 7: skillsdemo.CreateSurveyReq
	(*PendingFeedbackReq)(nil), // 8: skillsdemo.PendingFeedbackReq
	(*SurveyStatusReq)(nil),    // 9: skillsdemo.SurveyStatusReq
	(*CreatePrompt)(nil),       // 10: skillsdemo.CreatePrompt
	(*Prompt)(nil),             // 11: skillsdemo.Prompt
	(*Measure)(nil),            // 12: skillsdemo.Measure
}
var file_rpc_survey_service_proto_depIdxs = []int32{
	0,  // 0: skillsdemo.SurveyResp.status:type_name -> skillsdemo.SurveyStatus
	11, // 1: skillsdemo.SurveyResp.prompts:type_name -> skillsdemo.Prompt
	0,  // 2: skillsdemo.CreateSurveyReq.status:type_name -> skillsdemo.SurveyStatus
	10, // 3: skillsdemo.CreateSurveyReq.prompts:type_name -> skillsdemo.CreatePrompt
	0,  // 4: skillsdemo.PendingFeedbackReq.status:type_name -> skillsdemo.SurveyStatus
	11, // 5: skillsdemo.PendingFeedbackReq.prompts:type_name -> skillsdemo.Prompt
	0,  // 6: skillsdemo.SurveyStatusReq.status:type_name -> skillsdemo.SurveyStatus
	12, // 7: skillsdemo.CreatePrompt.response_type:type_name -> skillsdemo.Measure
	12, // 8: skillsdemo.Prompt.response_type:type_name -> skillsdemo.Measure
	1,  // 9: skillsdemo.Measure.type:type_name -> skillsdemo.MeasureType
	2,  // 10: skillsdemo.Measure.range:type_name -> skillsdemo.MeasureRange
	3,  // 11: skillsdemo.Measure.boolean:type_name -> skillsdemo.MeasureBoolean
	4,  // 12: skillsdemo.Measure.enumeration:type_name -> skillsdemo.MeasureEnum
	5,  // 13: skillsdemo.Measure.flags:type_name -> skillsdemo.MeasureFlags
	7,  // 14: skillsdemo.Survey.CreateSurvey:input_type -> skillsdemo.CreateSurveyReq
	6,  // 15: skillsdemo.Survey.CreateSurvey:output_type -> skillsdemo.SurveyResp
	15, // [15:16] is the sub-list for method output_type
	14, // [14:15] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_rpc_survey_service_proto_init() }
func file_rpc_survey_service_proto_init() {
	if File_rpc_survey_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rpc_survey_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_survey_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureBoolean); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_survey_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureEnum); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_survey_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MeasureFlags); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_survey_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveyResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_survey_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSurveyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_survey_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PendingFeedbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_survey_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SurveyStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_survey_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePrompt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_survey_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Prompt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rpc_survey_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Measure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_rpc_survey_service_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_rpc_survey_service_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_rpc_survey_service_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rpc_survey_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rpc_survey_service_proto_goTypes,
		DependencyIndexes: file_rpc_survey_service_proto_depIdxs,
		EnumInfos:         file_rpc_survey_service_proto_enumTypes,
		MessageInfos:      file_rpc_survey_service_proto_msgTypes,
	}.Build()
	File_rpc_survey_service_proto = out.File
	file_rpc_survey_service_proto_rawDesc = nil
	file_rpc_survey_service_proto_goTypes = nil
	file_rpc_survey_service_proto_depIdxs = nil
}
